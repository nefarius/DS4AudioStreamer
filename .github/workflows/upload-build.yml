name: Build and Upload to Buildbot

on:
  push:
    tags:
      - "v*"   # Only run when pushing tags that start with 'v'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish .NET 9 Desktop App
        run: dotnet publish --configuration Release -o publish

      - name: Zip published output
        run: Compress-Archive -Path publish\* -DestinationPath output.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: output.zip
          path: output.zip

      - name: Get artifact download URL
        id: get_artifact
        shell: bash
        run: |
          response=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts)

          artifact_url=$(echo "$response" | jq -r '.artifacts[0].archive_download_url')
          echo "url=$artifact_url" >> $GITHUB_OUTPUT

      - name: Send AppVeyor-style webhook
        shell: bash
        run: |
          curl -X POST "${{ secrets.WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "build": {
                "job_id": "'"${{ github.run_id }}"'",
                "version": "'"${{ github.ref_name }}"'",
                "branch": "'"${GITHUB_REF_NAME}"'",
                "commit_id": "'"${GITHUB_SHA}"'",
                "status": "success"
              },
              "artifacts": [
                {
                  "fileName": "output.zip",
                  "type": "WebDeployPackage",
                  "url": "'"${{ steps.get_artifact.outputs.url }}"'"
                }
              ]
            }'
